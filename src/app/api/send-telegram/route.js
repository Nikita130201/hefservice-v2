// src/app/api/send-telegram/route.js
export async function POST(req) {
  try {
    // —Ñ–æ—Ä–º–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ multipart/form-data (json + file(–æ–ø—Ü.))
    const form = await req.formData();

    // "json" ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—ã –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞
    const raw = form.get("json");
    const data = raw ? JSON.parse(String(raw)) : {};

    const {
      country,
      operators,
      amountType,
      exactQty,
      registration,
      telegram,
      email,
      comment,
    } = data;

    // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã
    const tg = (telegram || "").trim();
    const em = (email || "").trim();

    const contactsLines = [];
    if (tg) contactsLines.push(`üí¨ Telegram: ${tg.startsWith("@") ? tg : `@${tg}`}`);
    if (em) contactsLines.push(`üìß E-mail: ${em}`);

    const amountText =
      amountType === "exact" && exactQty ? `${exactQty}` : "–ì–∏–±–∫–∞—è –ø–∞—Ä—Ç–∏—è";

    // —Å–æ–æ–±—â–µ–Ω–∏–µ
    let text = [
      "üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞",
      `üåç –°—Ç—Ä–∞–Ω–∞: ${country || "‚Äî"}`,
      `üß© –û–ø–µ—Ä–∞—Ç–æ—Ä—ã: ${operators || "‚Äî"}`,
      `üì¶ –ö–æ–ª-–≤–æ: ${amountText}`,
      `ü™™ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: ${registration || "‚Äî"}`,
      contactsLines.length ? contactsLines.join("\n") : "üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã: ‚Äî",
      `üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment?.trim() || "‚Äî"}`,
    ].join("\n");

    // –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    const token = process.env.TELEGRAM_BOT_TOKEN;
    const chatId = process.env.TELEGRAM_CHAT_ID;

    if (!token || !chatId) {
      return new Response(JSON.stringify({ ok: false, error: "No TG env" }), { status: 500 });
    }

    // –µ—Å–ª–∏ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª/—Ñ–æ—Ç–æ ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–º –∫–∞–∫ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é,
    // –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    const file = form.get("file");
    if (file && typeof file === "object" && "arrayBuffer" in file) {
      const fd = new FormData();
      fd.set("chat_id", chatId);
      fd.set("caption", text);
      fd.set("photo", file); // —Ñ–æ—Ç–æ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      await fetch(`https://api.telegram.org/bot${token}/sendPhoto`, {
        method: "POST",
        body: fd,
      });
    } else {
      await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: chatId,
          text,
          parse_mode: "HTML",
          disable_web_page_preview: true,
        }),
      });
    }

    return Response.json({ ok: true });
  } catch (err) {
    console.error("tg route error:", err);
    return new Response(JSON.stringify({ ok: false, error: String(err) }), { status: 500 });
  }
}